/*if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}*/
//由于Main组件目前定位是整合且未完善，暂时不允许单独运行调试，只作为lib引入到app之后运行
apply plugin: 'com.android.library'


android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        /*if (isModule.toBoolean()) {
            applicationId "com.ruffian.android.mvvm.module.main"
        }*/
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //资源文件配置
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    //view绑定
    viewBinding {
        enabled = true
    }

    //数据绑定
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(':library_common')//library_common
    annotationProcessor deps.arouter_compiler
}