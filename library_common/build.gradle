apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //view绑定
    viewBinding {
        enabled = true
    }

    //数据绑定
    dataBinding {
        enabled = true
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    api project(':framework_mvvm')//mvvm框架
    api project(':framework_http')//http框架

    api deps.appcompat
    api deps.constraintlayout
    api deps.RWidgetHelper
    api deps.material
    api deps.BaseRecyclerViewAdapterHelper
    /*glide*/
    api deps.glide
    /*recyclerview*/
    api deps.recyclerview
    /*refresh*/
    api deps.refresh.kernel //核心必须依赖
    api deps.refresh.header_classics     //经典刷新头
    /*ViewModel*/
    api deps.viewmodel
    /*LiveData*/
    api deps.livedata
    /*ARouter*/
    api deps.arouter_api

}